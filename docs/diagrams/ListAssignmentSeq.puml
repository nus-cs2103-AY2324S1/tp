@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ListAssignmentParser" as ListAssignmentParser LOGIC_COLOR
participant "a:ListAssignmentCommand" as ListAssignmentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "predicate:AssignmentBetweenStartandEndPredicate" as AssignmentBetweenStartandEndPredicate MODEL_COLOR
end box


[-> LogicManager : execute("list-a args")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("list-a args", model::isValidOperation)
activate AddressBookParser

create ListAssignmentParser
AddressBookParser -> ListAssignmentParser
activate ListAssignmentParser

ListAssignmentParser --> AddressBookParser
deactivate ListAssignmentParser

AddressBookParser -> ListAssignmentParser : parse("args")
activate ListAssignmentParser

create AssignmentBetweenStartandEndPredicate
ListAssignmentParser -> AssignmentBetweenStartandEndPredicate
activate AssignmentBetweenStartandEndPredicate

AssignmentBetweenStartandEndPredicate --> ListAssignmentParser : predicate
deactivate AssignmentBetweenStartandEndPredicate

create ListAssignmentCommand
ListAssignmentParser -> ListAssignmentCommand
activate ListAssignmentCommand

ListAssignmentCommand --> ListAssignmentParser : a
deactivate ListAssignmentCommand

ListAssignmentParser --> AddressBookParser : a
deactivate ListAssignmentParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
ListAssignmentParser -[hidden]-> AddressBookParser
destroy ListAssignmentParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> ListAssignmentCommand : execute()
activate ListAssignmentCommand

ListAssignmentCommand -> Model : setView(View.ASSIGNMENT)
activate Model

Model --> ListAssignmentCommand

ListAssignmentCommand -> Model : updateFilteredAssignmentList(predicate)

Model --> ListAssignmentCommand
deactivate Model

create CommandResult
ListAssignmentCommand -> CommandResult
activate CommandResult

CommandResult --> ListAssignmentCommand
deactivate CommandResult

ListAssignmentCommand --> LogicManager : result
deactivate ListAssignmentCommand

[<--LogicManager
deactivate LogicManager
@enduml

@startuml
!include style.puml
skinparam ArrowFontStyle plain

box SeplendidLogic LOGIC_COLOR_T1
participant ":SeplendidLogicManager" as SeplendidLogicManager LOGIC_COLOR
participant ":SeplendidParser" as SeplendidParser LOGIC_COLOR
participant ":LocalCourseUpdateCommandParser" as LocalCourseUpdateCommandParser LOGIC_COLOR
participant "d:LocalCourseUpdateCommand" as LocalCourseUpdateCommand LOGIC_COLOR
participant ":LocalCourse" as LocalCourse LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box SeplendidModel MODEL_COLOR_T1
participant ":SeplendidModel" as SeplendidModel MODEL_COLOR
end box

[-> SeplendidLogicManager : execute("localcourse update [CS2103] [unit] [5.0]")
activate SeplendidLogicManager

SeplendidLogicManager -> SeplendidParser : parseCommand("localcourse update [CS2103] [unit] [5.0]")
activate SeplendidParser

create LocalCourseUpdateCommandParser
SeplendidParser -> LocalCourseUpdateCommandParser
activate LocalCourseUpdateCommandParser

LocalCourseUpdateCommandParser --> SeplendidParser
deactivate LocalCourseUpdateCommandParser

SeplendidParser -> LocalCourseUpdateCommandParser : parse("[CS2103] [unit] [5.0]")
activate LocalCourseUpdateCommandParser

create LocalCourseUpdateCommand
LocalCourseUpdateCommandParser -> LocalCourseUpdateCommand
activate LocalCourseUpdateCommand

LocalCourseUpdateCommand --> LocalCourseUpdateCommandParser : d
deactivate LocalCourseUpdateCommand

LocalCourseUpdateCommandParser --> SeplendidParser : d
deactivate LocalCourseUpdateCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
LocalCourseUpdateCommandParser -[hidden]-> SeplendidParser
destroy LocalCourseUpdateCommandParser

SeplendidParser --> SeplendidLogicManager : d
deactivate SeplendidParser

SeplendidLogicManager -> LocalCourseUpdateCommand : execute()
activate LocalCourseUpdateCommand

LocalCourseUpdateCommand -> SeplendidModel : getLocalCourseIfExists(localCode)
activate SeplendidModel

SeplendidModel --> LocalCourseUpdateCommand : Optional.of(localCourse)
deactivate SeplendidModel

create LocalCourse
LocalCourseUpdateCommand -> LocalCourse
activate LocalCourse

LocalCourse -> LocalCourseUpdateCommand
deactivate LocalCourse

LocalCourseUpdateCommand -> SeplendidModel : setLocalCourse(localCourse, updatedLocalCourse)
activate SeplendidModel

SeplendidModel --> LocalCourseUpdateCommand
deactivate SeplendidModel

create CommandResult
LocalCourseUpdateCommand -> CommandResult
activate CommandResult

CommandResult --> LocalCourseUpdateCommand
deactivate CommandResult

LocalCourseUpdateCommand --> SeplendidLogicManager : result
deactivate LocalCourseUpdateCommand

[<--SeplendidLogicManager
deactivate SeplendidLogicManager
@enduml

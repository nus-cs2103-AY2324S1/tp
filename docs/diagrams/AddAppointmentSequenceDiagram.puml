@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddAppointmentCommandParser" as AddAppointmentCommandParser LOGIC_COLOR
participant "a:AddAppointmentCommand" as AddAppointmentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("add-appointment dentist/1 patient/1 start/2023-10-12 16:00 tr/Braces")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("add-appointment dentist/1 patient/1 start/2023-10-12 16:00 tr/Braces")
activate AddressBookParser

create AddAppointmentCommandParser
AddressBookParser -> AddAppointmentCommandParser
activate AddAppointmentCommandParser

AddAppointmentCommandParser --> AddressBookParser
deactivate AddAppointmentCommandParser

AddressBookParser -> AddAppointmentCommandParser : parse("dentist/1 patient/1 start/2023-10-12 16:00 tr/Braces")
activate AddAppointmentCommandParser

create AddAppointmentCommand
AddAppointmentCommandParser -> AddAppointmentCommand : createCommand(appointmentDetails)
activate AddAppointmentCommand


AddAppointmentCommand --> AddAppointmentCommandParser : a
deactivate AddAppointmentCommand

AddAppointmentCommandParser --> AddressBookParser : a
deactivate AddAppointmentCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
AddAppointmentCommandParser -[hidden]-> AddressBookParser
destroy AddAppointmentCommandParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> AddAppointmentCommand : execute()
activate AddAppointmentCommand

AddAppointmentCommand --> Model : updateFilteredTreatmentList(predicate)
activate Model
Model --> AddAppointmentCommand
deactivate Model

AddAppointmentCommand --> Model : getFilteredTreatmentList()
activate Model
Model --> AddAppointmentCommand
deactivate Model

AddAppointmentCommand --> Model : geDentistById(dentistId)
activate Model
Model --> AddAppointmentCommand
deactivate Model

AddAppointmentCommand --> Model : getPatientById(patientId)
activate Model
Model --> AddAppointmentCommand
deactivate Model

AddAppointmentCommand -> Model : addAppointment(toAdd)
activate Model
Model --> AddAppointmentCommand
deactivate Model

create CommandResult
AddAppointmentCommand -> CommandResult
activate CommandResult

CommandResult --> AddAppointmentCommand
deactivate CommandResult

AddAppointmentCommand --> LogicManager : result
deactivate Model

[<--LogicManager
deactivate LogicManager
@enduml

@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":InternshipLogicManager" as InternshipLogicManager LOGIC_COLOR
participant ":InternshipBookParser" as InternshipBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":InternshipModel" as Model MODEL_COLOR
end box

box Storage STORAGE_COLOR_T3
participant ":InternshipStorage" as Storage STORAGE_COLOR
end box

[-> InternshipLogicManager : execute("delete 1")
activate InternshipLogicManager

InternshipLogicManager -> InternshipBookParser : parseCommand("delete 1")
activate InternshipBookParser

create DeleteCommandParser
InternshipBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> InternshipBookParser
deactivate DeleteCommandParser

InternshipBookParser -> DeleteCommandParser : parse("1")
activate DeleteCommandParser

create DeleteCommand
DeleteCommandParser -> DeleteCommand
activate DeleteCommand

DeleteCommand --> DeleteCommandParser : d
deactivate DeleteCommand

DeleteCommandParser --> InternshipBookParser : d
deactivate DeleteCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteCommandParser -[hidden]-> InternshipBookParser
destroy DeleteCommandParser

InternshipBookParser --> InternshipLogicManager : d
deactivate InternshipBookParser

InternshipLogicManager -> DeleteCommand : execute(model)
activate DeleteCommand
DeleteCommand -> Model : deleteInternship(1)
activate Model

Model --> DeleteCommand
deactivate Model

create CommandResult
DeleteCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteCommand
deactivate CommandResult

DeleteCommand --> InternshipLogicManager : result
deactivate DeleteCommand

InternshipLogicManager -> Model : getInternshipBook()
activate Model

Model --> InternshipLogicManager : internshipBook
deactivate Model

InternshipLogicManager -> Storage : saveInternshipBook(internshipBook)
activate Storage

Storage --> InternshipLogicManager
deactivate Storage

[<--InternshipLogicManager
deactivate InternshipLogicManager
@enduml

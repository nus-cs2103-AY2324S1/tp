@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddMeetingCommandParser" as AddMeetingCommandParser LOGIC_COLOR
participant "a:AddMeetingCommand" as AddMeetingCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":Person" as Person MODEL_COLOR
end box

[-> LogicManager : execute("addmeeting 1 ...")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand()
activate AddressBookParser

create AddMeetingCommandParser
AddressBookParser -> AddMeetingCommandParser
activate AddMeetingCommandParser

AddMeetingCommandParser --> AddressBookParser
deactivate AddMeetingCommandParser

AddressBookParser -> AddMeetingCommandParser : parse()
activate AddMeetingCommandParser

create AddMeetingCommand
AddMeetingCommandParser -> AddMeetingCommand
activate AddMeetingCommand

AddMeetingCommand --> AddMeetingCommandParser : a
deactivate AddMeetingCommand

AddMeetingCommandParser --> AddressBookParser : a
deactivate AddMeetingCommandParser
AddMeetingCommandParser -[hidden]-> AddressBookParser : a
destroy AddMeetingCommandParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> AddMeetingCommand : execute()
activate AddMeetingCommand

AddMeetingCommand -> Model : getFilteredPersonList()
activate Model

Model --> AddMeetingCommand
deactivate Model

create Person
AddMeetingCommand -> Person
activate Person

Person --> AddMeetingCommand
deactivate Person

AddMeetingCommand -> Model : setPerson()
activate Model

Model --> AddMeetingCommand
deactivate Model

AddMeetingCommand -> Model : updateFilteredPersonList()
activate Model

Model --> AddMeetingCommand
deactivate Model

AddMeetingCommand --> LogicManager : CommandResult
deactivate AddMeetingCommand

[<--LogicManager
deactivate LogicManager
@enduml

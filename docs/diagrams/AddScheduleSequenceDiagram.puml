@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddSchedule\nCommandParser" as AddScheduleCommandParser LOGIC_COLOR
participant "add-s:AddSchedule\nCommand" as AddScheduleCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
participant "s:Schedule" as Schedule MODEL_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box
[-> LogicManager : execute("add-s 1\nst/2023-09-15T09:00\n  et/2023-09-15T11:00")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("add-s 1\nst/2023-09-15T09:00\n  et/2023-09-15T11:00")
activate AddressBookParser

create AddScheduleCommandParser
AddressBookParser -> AddScheduleCommandParser
activate AddScheduleCommandParser

AddScheduleCommandParser --> AddressBookParser
deactivate AddScheduleCommandParser


AddressBookParser -> AddScheduleCommandParser : parse("1 st/2023-09-15T09:00\n               et/2023-09-15T11:00")
activate AddScheduleCommandParser

create AddScheduleCommand
AddScheduleCommandParser -> AddScheduleCommand
activate AddScheduleCommand

AddScheduleCommand --> AddScheduleCommandParser :  add-s
deactivate AddScheduleCommand


AddScheduleCommandParser --> AddressBookParser : add-s
deactivate AddScheduleCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
AddScheduleCommandParser -[hidden]-> AddressBookParser
destroy AddScheduleCommandParser

AddressBookParser --> LogicManager : add-s
deactivate AddressBookParser

LogicManager -> AddScheduleCommand : execute()
activate AddScheduleCommand

AddScheduleCommand -> Model : getFilteredPersonList()
activate Model

Model --> AddScheduleCommand
deactivate Model

create Schedule

AddScheduleCommand -> Schedule
activate Schedule

Schedule --> AddScheduleCommand : s
deactivate Schedule

AddScheduleCommand -> Model : hasSchedule(s)
activate Model

Model --> AddScheduleCommand
deactivate Model

AddScheduleCommand -> Model : getAddressBook()
activate Model

Model --> AddScheduleCommand
deactivate Model

loop number of schedules in model
    AddScheduleCommand -> Schedule : isClashing(Schedule)
    activate Schedule
    Schedule --> AddScheduleCommand
    deactivate Schedule
end

AddScheduleCommand -> Model : addSchedule(s)
activate Model

Model --> AddScheduleCommand
deactivate Model

create CommandResult
AddScheduleCommand -> CommandResult
activate CommandResult

CommandResult --> AddScheduleCommand : result
deactivate CommandResult

AddScheduleCommand --> LogicManager : result
deactivate AddScheduleCommand
AddScheduleCommand -[hidden]-> LogicManager : result
destroy AddScheduleCommand

[<--LogicManager
deactivate LogicManager
@enduml

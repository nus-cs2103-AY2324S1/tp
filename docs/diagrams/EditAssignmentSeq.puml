@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditAssignmentParser" as EditAssignmentParser LOGIC_COLOR
participant "e:EditAssignmentCommand" as EditAssignmentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant ":Assignment" as Assignment USER_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit-a args")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("edit-a args", model::isValidOperation)
activate AddressBookParser

AddressBookParser -> AddressBookParser : verifyView(model::isValidOperation, View.ASSIGNMENT)
activate AddressBookParser

AddressBookParser -> LogicManager : model.isValidOperation(View.ASSIGNMENT)
activate LogicManager

LogicManager --> AddressBookParser : isValid
deactivate LogicManager

AddressBookParser --> AddressBookParser

deactivate AddressBookParser

create EditAssignmentParser
AddressBookParser -> EditAssignmentParser
activate EditAssignmentParser

EditAssignmentParser --> AddressBookParser
deactivate EditAssignmentParser

AddressBookParser -> EditAssignmentParser : parse("args")
activate EditAssignmentParser

create EditAssignmentCommand
EditAssignmentParser -> EditAssignmentCommand
activate EditAssignmentCommand

EditAssignmentCommand --> EditAssignmentParser : e
deactivate EditAssignmentCommand

EditAssignmentParser --> AddressBookParser : e
deactivate EditAssignmentParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditAssignmentParser -[hidden]-> AddressBookParser
destroy EditAssignmentParser

AddressBookParser --> LogicManager : e
deactivate AddressBookParser

LogicManager -> EditAssignmentCommand : execute()
activate EditAssignmentCommand

create Assignment
EditAssignmentCommand -> Assignment : getNewAssignmentWithDescription()
activate Assignment

Assignment --> EditAssignmentCommand : a
deactivate Assignment

EditAssignmentCommand -> Model : setAssignment(a)
activate Model

Model --> EditAssignmentCommand
deactivate Model

create CommandResult
EditAssignmentCommand -> CommandResult
activate CommandResult

CommandResult --> EditAssignmentCommand
deactivate CommandResult

EditAssignmentCommand --> LogicManager : result
deactivate EditAssignmentCommand

[<--LogicManager
deactivate LogicManager
@enduml

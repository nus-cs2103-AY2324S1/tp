@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":CodeSphereParser" as CodeSphereParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "d:FindCommand" as FindCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box StageManger STAGE_COLOR_T1
participant ":StageManager" as StageManager STAGE_COLOR
end box

box Model MODEL_COLOR_T1
participant "d:NameContainsKeywordsPredicate" as NameContainsKeywordsPredicate MODEL_COLOR
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("find n/john")
activate LogicManager

LogicManager -> CodeSphereParser : parseCommand("find n/john")
activate CodeSphereParser

create FindCommandParser
CodeSphereParser -> FindCommandParser
activate FindCommandParser

FindCommandParser --> CodeSphereParser
deactivate FindCommandParser

CodeSphereParser -> FindCommandParser : parse("n/john")
activate FindCommandParser

create NameContainsKeywordsPredicate
FindCommandParser -> NameContainsKeywordsPredicate
activate NameContainsKeywordsPredicate

NameContainsKeywordsPredicate --> FindCommandParser
deactivate NameContainsKeywordsPredicate

create FindCommand
FindCommandParser -> FindCommand
activate FindCommand

FindCommand --> FindCommandParser : f
deactivate FindCommand

FindCommandParser --> CodeSphereParser : f
deactivate FindCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
FindCommandParser -[hidden]-> CodeSphereParser
destroy FindCommandParser

CodeSphereParser --> LogicManager : f
deactivate CodeSphereParser

LogicManager -> FindCommand : execute()
activate FindCommand

FindCommand -> StageManager : getInstance()
activate StageManager

StageManager --> FindCommand
deactivate StageManager

FindCommand -> StageManager : instance.getSelectedCourse()
activate StageManager

StageManager --> FindCommand
deactivate StageManager


FindCommand -> Model : updateFilteredStudentList(NameContainsKeywordsPredicate("john"))
activate Model

Model --> FindCommand
deactivate Model

FindCommand -> Model : getFilteredStudentList().size()
activate Model

Model --> FindCommand
deactivate Model

create CommandResult
FindCommand -> CommandResult
activate CommandResult

CommandResult --> FindCommand
deactivate CommandResult

FindCommand --> CodeSphereParser : result
deactivate FindCommand

CodeSphereParser --> LogicManager : result
deactivate CodeSphereParser

[<--LogicManager
deactivate LogicManager
@enduml

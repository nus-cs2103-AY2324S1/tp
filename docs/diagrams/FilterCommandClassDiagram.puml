@startuml

class FilterCommandParser {
  + parse: FilterCommand
}

class FilterCommand {
  - COMMAND_WORD: String
  - MESSAGE_USAGE: String
  - MESSAGE_DETAILS: String
  - messageSuccess: String
  + FilterCommand(predicate: Predicate)
  + execute(model: Model): CommandResult
  + equals(other: Object): boolean
  + toString(): String
  + getSuccessMessage(): String
}

class TaskDueDatePredicate
class TaskPriorityPredicate
class TaskStatusPredicate
class TaskRecurringTypePredicate
class CombinedPredicate

class "<<interface>>\nPredicate" as Predicate

FilterCommand <.. Predicate
Predicate <-- TaskDueDatePredicate
Predicate <-- TaskPriorityPredicate
Predicate <-- TaskStatusPredicate
Predicate <-- TaskRecurringTypePredicate
Predicate <-- CombinedPredicate

FilterCommandParser <.. TaskDueDatePredicate
FilterCommandParser <.. TaskPriorityPredicate
FilterCommandParser <.. TaskStatusPredicate
FilterCommandParser <.. TaskRecurringTypePredicate
FilterCommandParser <.. CombinedPredicate



FilterCommandParser .left.> FilterCommand : parse >

@enduml

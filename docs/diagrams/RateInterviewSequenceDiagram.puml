@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":RateCommandParser" as RateCommandParser LOGIC_COLOR
participant ":ParseUtil" as ParseUtil LOGIC_COLOR
participant "r:RateCommand" as RateCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "ratedInterview:Interview" as Interview MODEL_COLOR
end box

[-> LogicManager : execute("rate 1 3.0")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("rate 1 3.0")
activate AddressBookParser

create RateCommandParser
AddressBookParser -> RateCommandParser
activate RateCommandParser

RateCommandParser --> AddressBookParser
deactivate RateCommandParser

AddressBookParser -> RateCommandParser : parse("1 3.0")
activate RateCommandParser

RateCommandParser -> ParseUtil : parseIndex("1")
activate ParseUtil

ParseUtil --> RateCommandParser
deactivate ParseUtil

RateCommandParser -> ParseUtil : parseRating("3.0")
activate ParseUtil

ParseUtil --> RateCommandParser
deactivate ParseUtil

create RateCommand
RateCommandParser -> RateCommand
activate RateCommand

RateCommand --> RateCommandParser : r
deactivate RateCommand

RateCommandParser --> AddressBookParser : r
deactivate RateCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
RateCommandParser -[hidden]-> AddressBookParser
destroy RateCommandParser

AddressBookParser --> LogicManager : r
deactivate AddressBookParser

LogicManager -> RateCommand : execute()
activate RateCommand

RateCommand -> Model : getFilteredInterviewList()
activate Model

Model --> RateCommand : lastShownList
deactivate Model

create Interview
RateCommand -> Interview
activate Interview
return ratedInterview

RateCommand -> Model : setInterview(interviewToRate, ratedInterview)
activate Model

Model --> RateCommand
deactivate Model

create CommandResult
RateCommand -> CommandResult
activate CommandResult

CommandResult --> RateCommand : result
deactivate CommandResult

RateCommand --> LogicManager : result
deactivate RateCommand

[<--LogicManager
deactivate LogicManager
@enduml

@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1

participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "d:EditCompanyDescriptor" as EditCompanyDescriptor LOGIC_COLOR
participant "e:EditCommand" as EditCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR

end box

box Model MODEL_COLOR_T1
participant "m:ModelManager" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit 1 r/SWE")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("edit 1 r/SWE")
activate AddressBookParser

create EditCommandParser
AddressBookParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> AddressBookParser
deactivate EditCommandParser

AddressBookParser -> EditCommandParser : parse("1 r/SWE")
activate EditCommandParser

create EditCompanyDescriptor
EditCommandParser -> EditCompanyDescriptor
activate EditCompanyDescriptor

EditCompanyDescriptor --> EditCommandParser : d
deactivate EditCompanyDescriptor

create EditCommand
EditCommandParser -> EditCommand : EditCommand(1, d)
activate EditCommand

EditCommand --> EditCommandParser : e
deactivate EditCommand

EditCommandParser --> AddressBookParser : e
deactivate EditCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditCommandParser -[hidden]-> AddressBookParser
destroy EditCommandParser

AddressBookParser --> LogicManager : e
deactivate AddressBookParser

LogicManager -> EditCommand : execute(m)
activate EditCommand

EditCommand -> Model : getCompany(1)
activate Model

Model --> EditCommand : target
deactivate Model

EditCommand -> EditCommand : createEditedCompany(target, d)
activate EditCommand
EditCommand --> EditCommand : c
deactivate EditCommand

EditCommand -> Model : setCompany(target, c)
activate Model

Model --> EditCommand
deactivate Model

EditCommand -> Model : setCurrentViewedCompany(c)
activate Model

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand
deactivate CommandResult

EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager
deactivate LogicManager

@enduml

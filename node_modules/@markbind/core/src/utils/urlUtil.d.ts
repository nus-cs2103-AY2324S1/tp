/**
 * Calculates the absolute path of of the immediate parent site of the specified filePath.
 * @param filePath The absolute file path to look up that is nested inside the root directory
 * @param root The base directory from which to terminate the look up
 * @param lookUp The set of urls representing the sites' base directories
 * @return String The immediate parent site's absolute path.
 * @throws If a non-absolute path or path outside the root is given
 */
declare function getParentSiteAbsolutePath(filePath: string, root: string, lookUp: Set<string>): string;
/**
 * Calculates the absolute and relative path of of the immediate parent site of the specified filePath.
 */
declare function getParentSiteAbsoluteAndRelativePaths(filePath: string, root: string, lookUp: Set<string>): {
    absolute: string;
    relative: string;
};
/**
 * Calculates a boilerplate's source file path at the immediate parent site of
 * the supplied file path.
 */
declare function calculateBoilerplateFilePath(pathInBoilerplates: string, asIfAt: string, config: Record<string, any>): string;
declare function isUrl(unknownPath: string): boolean;
declare function stripBaseUrl(src: string, baseUrl: string): string;
export { getParentSiteAbsolutePath, getParentSiteAbsoluteAndRelativePaths, calculateBoilerplateFilePath, isUrl, stripBaseUrl, };
//# sourceMappingURL=urlUtil.d.ts.map
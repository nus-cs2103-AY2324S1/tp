import Promise from 'bluebird';
/**
* Creates a function that delays invoking `func` until after `wait` milliseconds have elapsed
* and the running `func` has resolved/rejected.
* @param func the promise-returning function to delay,
*        func should take in a single array
* @param wait the number of milliseconds to delay
* @returns delayedFunc that takes in a single argument (either an array or a single value)
*/
export declare function delay<T>(func: (arg: T[]) => Promise<unknown>, wait: number): (this: any, arg: T | T[]) => Promise<unknown>;
//# sourceMappingURL=delay.d.ts.map
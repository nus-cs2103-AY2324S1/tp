"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const katex_1 = __importDefault(require("katex"));
const markdown_it_1 = __importDefault(require("../lib/markdown-it"));
const texmath = require('markdown-it-texmath');
let pluginAdded = false;
// see https://github.com/goessner/markdown-it-texmath#features for supported delimiters
// note that some of them may not work correctly due to conflicting syntax
function mathDelimiters(pluginContext) {
    if (!pluginAdded) {
        if (!pluginContext.delimiters) {
            throw new Error('No delimiters defined in the plugin context!');
        }
        markdown_it_1.default.use(texmath, { engine: katex_1.default, delimiters: pluginContext.delimiters });
        pluginAdded = true; // only need to add once
    }
}
module.exports = {
    beforeSiteGenerate: (pluginContext) => mathDelimiters(pluginContext),
};
//# sourceMappingURL=mathDelimiters.js.map
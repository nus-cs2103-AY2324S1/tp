import type { Context } from './Context';
import type { PageSources } from '../Page/PageSources';
import type { VariableProcessor } from '../variables/VariableProcessor';
import { MbNode } from '../utils/node';
/**
 * PreProcesses panels with a src attribute specified.
 * Replaces the panel with an error node if the src is invalid.
 * Otherwise, sets the fragment attribute of the panel as parsed from the src,
 * and adds the appropriate include.
 */
export declare function processPanelSrc(node: MbNode, context: Context, pageSources: PageSources, config: Record<string, any>): Context;
/**
 * PreProcesses includes.
 * Replaces it with an error node if the specified src is invalid,
 * or an empty node if the src is invalid but optional.
 */
export declare function processInclude(node: MbNode, context: Context, pageSources: PageSources, variableProcessor: VariableProcessor, renderMd: (text: string) => string, renderMdInline: (text: string) => string, config: Record<string, any>): Context;
/**
 * PreProcesses popovers with the src attribute.
 * Replaces it with an error node if the specified src is invalid.
 * Else, appends the content to the node.
 */
export declare function processPopoverSrc(node: MbNode, context: Context, pageSources: PageSources, variableProcessor: VariableProcessor, renderMd: (text: string) => string, config: Record<string, any>): Context;
//# sourceMappingURL=includePanelProcessor.d.ts.map
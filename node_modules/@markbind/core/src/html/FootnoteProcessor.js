"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FootnoteProcessor = void 0;
const cheerio_1 = __importDefault(require("cheerio"));
const node_1 = require("../utils/node");
const constants_1 = require("./constants");
/*
 * Footnotes of the main content and <include>s are stored, then combined by NodeProcessor at the end
 */
class FootnoteProcessor {
    constructor() {
        // Store footnotes of <include>s and the main content
        this.renderedFootnotes = [];
    }
    processMbTempFootnotes(node) {
        const $ = (0, cheerio_1.default)(node);
        const content = $.html();
        if (content) {
            this.renderedFootnotes.push(content);
        }
        $.remove();
    }
    combineFootnotes(processNode) {
        let hasFootnote = false;
        const prefix = '<hr class="footnotes-sep">\n<section class="footnotes">\n<ol class="footnotes-list">\n';
        const footnotesWithPopovers = this.renderedFootnotes.map((footNoteBlock) => {
            const $ = cheerio_1.default.load(footNoteBlock);
            let popoversHtml = '';
            $('li.footnote-item').each((_index, li) => {
                hasFootnote = true;
                const popoverId = `${constants_1.MARKBIND_FOOTNOTE_POPOVER_ID_PREFIX}${li.attribs.id}`;
                const popoverNode = (0, node_1.parseHTML)(`<popover id="${popoverId}">
            <div #content>
              ${$(li).html()}
            </div>
          </popover>`)[0];
                processNode(popoverNode);
                popoversHtml += cheerio_1.default.html(popoverNode);
            });
            return `${popoversHtml}\n${footNoteBlock}\n`;
        }).join('\n');
        const suffix = '</ol>\n</section>\n';
        return hasFootnote
            ? prefix + footnotesWithPopovers + suffix
            : '';
    }
}
exports.FootnoteProcessor = FootnoteProcessor;
//# sourceMappingURL=FootnoteProcessor.js.map